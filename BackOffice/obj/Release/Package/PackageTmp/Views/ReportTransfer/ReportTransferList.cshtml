@*@model List<DataModel.FlightBooking>*@
@*@model List<DataModel.FlightBookingFlightDetail>*@
@model List<BL.Entities.TransferBooking.Request>

<head>

    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
</head>
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <div class="d-sm-flex align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Airport Transfer Report List</h6>
            @*<a href="@Url.Action("MarkupDetail", new { id = Guid.Empty })" class=" d-sm-inline-block btn btn-sm btn-primary shadow-sm">
                    <i class="fas fa-file-export text-white-50"></i>
                    Export
                </a>*@
        </div>
    </div>
    <div class="card-body">

        @using (Html.BeginForm("SearchTransferList", "ReportTransfer", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal row-fluid cmxform", id = "formCreate", name = "formCreate" }))
        {
            List<SelectListItem> selectListPayment = new List<SelectListItem>
{
        new SelectListItem{ Text="--", Value = "00" },
        new SelectListItem{ Text="Unknown", Value = "0" },
        new SelectListItem{ Text="Credit/Debit Card", Value = "1" },
        new SelectListItem{ Text="Installment By K-Bank Credit Card", Value = "2" },
        new SelectListItem{ Text="Promptpay QR Code", Value = "3" },
        new SelectListItem{ Text="Bank-Transfer", Value = "4" }
    };

            List<SelectListItem> selectListBookigStatus = new List<SelectListItem>
{
        new SelectListItem{ Text="--", Value = "00" },
        new SelectListItem{ Text="New", Value = "0" },
        new SelectListItem{ Text="Confirmed", Value = "1" },
        new SelectListItem{ Text="Fail", Value = "2" },
        new SelectListItem{ Text="Cancelled", Value = "3" },
    };
            List<SelectListItem> selectListSourceBy = new List<SelectListItem>
{
        new SelectListItem{ Text="--", Value = "00" },
        new SelectListItem{ Text="Web", Value = "1" },
        new SelectListItem{ Text="App", Value = "2" },
        new SelectListItem{ Text="Chat", Value = "3" },
    };


<div class="row">
    <table class="table table-bordered">
        <thead class="table-gradient">
            <tr>
                <th style="color:#FBAA09;">Payment Method</th>
                <th style="color:#FBAA09;">Booking Date</th>
                @*<th style="color:#FBAA09;">Pay Before</th>*@
                <th style="color:#FBAA09;">Source By</th>
                <th style="color:#FBAA09;">Booking Status</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th>@Html.DropDownList("PaymentMethod", selectListPayment, new { @class = "form-control form-control-sm", @width = "100%" })</th>
                <th><input type="text" style="background-color:#fff" name="bookingdate" id="bookingdate" value="" class="form-control form-control-sm" readonly /><i class="fa fa-calendar-alt" style="margin-top: -24px;float: right;padding-right: 8px;color:#FBAC02;"></i></th>
                @*<th><input type="text" style="background-color:#fff" name="paybefore" id="paybefore" value="" class="form-control form-control-sm" readonly /><i class="fa fa-calendar-alt" style="margin-top: -24px;float: right;padding-right: 8px;color:#FBAC02;"></i></th>*@
                <th>@Html.DropDownList("SourceBy", selectListSourceBy, new { @class = "form-control form-control-sm", @width = "100%" })</th>
                <th>@Html.DropDownList("BookingStatus", selectListBookigStatus, new { @class = "form-control form-control-sm", @width = "100%" })</th>
                <th style="text-align:center;"><button type="submit" class="btn btn-primary" style=""><i class="fas fa-search"></i>&nbsp;Search</button></th>
            </tr>
        </tbody>
    </table>

</div>
}
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="grid" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th style="text-align:center; background-color:#FBAC02; color:white;">Gogojii ID</th>
                        <th style="text-align:center; background-color:#FBAC02; color:white;">Booking Date</th>
                        <th style="text-align:center; background-color:#FBAC02; color:white;">Booking Code</th>
                        <th style="text-align:center; background-color:#FBAC02; color:white;">Status Payment</th>
                        <th style="text-align:center; background-color:#FBAC02; color:white;">Status Booking</th>
                        <th style="text-align:center; background-color:#FBAC02; color:white;">Contact</th>
                        <th style="text-align:center; background-color:#FBAC02; color:white;">Flight Number</th>

                        <th style="background-color:#FBAC02;"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var reportTransferFlight in Model)
                    {
                        <tr>
                            <td align="center">
                                @reportTransferFlight.main.gogojiiID
                            </td>
                            <td align="center">
                                @reportTransferFlight.main.bookingDate.ToString("dd/MM/yyyy HH:mm:ss tt")
                            </td>
                            <td align="center">
                                @reportTransferFlight.main.transferReferenceNumber
                            </td>
                            <td>
                                <span>Payment</span>&nbsp;
                                @switch (reportTransferFlight.main.statusPayment)
                                {
                                    case 0:<label><span class="dotRed"></span>&nbsp;&nbsp;Waiting For Payment</label>; break;
                                    case 1: <label><span class="dotGreen"></span>&nbsp;&nbsp;Paid</label>; break;
                                    case 2: <label><span class="dotRed"></span>&nbsp;&nbsp;Fail</label>; break;
                                    case 3: <label><span class="dotRed"></span>&nbsp;&nbsp;Refunding</label>; break;
                                    case 4: <label><span class="dotRed"></span>&nbsp;&nbsp;Refunded</label>; break;
                                }
                            </td>
                            <td>
                                <span>Booking</span>&nbsp;
                                @switch (reportTransferFlight.main.statusBooking)
                                {
                                    case 0:<label><span class="dotRed"></span>&nbsp;&nbsp;New</label>; break;
                                    case 1: <label><span class="dotGreen"></span>&nbsp;&nbsp;Confirmed</label>; break;
                                    case 2: <label><span class="dotRed"></span>&nbsp;&nbsp;Fail</label>; break;
                                    case 3: <label><span class="dotRed"></span>&nbsp;&nbsp;Cancelled</label>; break;
                                }
                            </td>

                            <td>
                                @if (reportTransferFlight.contactInfo != null)
                                {
                                    @*<i class="fas fa-file-signature"></i><span>&nbsp; </span>*@ @reportTransferFlight.contactInfo.title<span>&nbsp;</span> @reportTransferFlight.contactInfo.firstname<span>&nbsp;</span> @reportTransferFlight.contactInfo.middlename<span>&nbsp;</span> @reportTransferFlight.contactInfo.lastname <br />
                                    @*<i class="fas fa-envelope-square"></i><span>&nbsp; &nbsp;</span>*@@reportTransferFlight.contactInfo.email <br />
                                    @*<i class="fas fa-phone-volume"></i><span>&nbsp; &nbsp;</span>*@@reportTransferFlight.contactInfo.telNo
                                }
                            </td>

                            <td>
                                @if (reportTransferFlight.departureTrip.flightNumber != null)
                                {
                                    <span>Depart :&nbsp;</span> @reportTransferFlight.departureTrip.flightNumber <br />
                                }
                                @if (reportTransferFlight.returnTrip.flightNumber != null)
                                {
                                    <span>Return :&nbsp;</span> @reportTransferFlight.returnTrip.flightNumber
                                }
                            </td>

                            <td>
                                <a href="@Url.Action("ReportTransferDetail", new { id = reportTransferFlight.transferBookingOID })">
                                    <span><i class="fas fa-eye"></i> View</span>
                                </a><br />
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


@section Scripts
{
    <script>
        @*var isSave = '@Request["save"]';
        $(document).ready(function () {
            $('#grid').DataTable({
                columnDefs: [{
                    "orderable": false,
                    "targets": [4]
                }, {
                    "render": function (data, type) {
                        if (type == 'sort') {
                            return data + '';
                        } else {
                            var html = '';
                            if (data == 1) {
                                html = '<i class="fas fa-check" style= "color: #00ff21" ></i>'
                            } else {
                                html = '<i class="fas fa-times" style= "color: #ff0000" ></i>'
                            }
                            return html;
                        }
                    },
                    "targets": [0]
                }]
            });*@

        var isSave = '@Request["save"]';
        $(document).ready(function () {
            $('#grid').DataTable({
                columnDefs: [ { type: 'date', 'targets': [2] } ],
                order: [2 ,'desc'],
                pageLength: 50,
                dom: 'lfrtBip',
                buttons: [
                      {
                        extend: 'csv',
                        title: function () {
                            var d = new Date();
                            var day = d.getDate();
                            var smonth = ((d.getMonth() + 1));
                            var hour = d.getHours();
                            var minute = d.getMinutes();
                            var seconds = d.getSeconds();
                            if (smonth   < 10) {smonth   = "0"+smonth;}
                            if (hour   < 10) {hour   = "0"+hour;}
                            if (minute < 10) {minute = "0"+minute;}
                            if (seconds < 10) {seconds = "0"+seconds;}
                            return 'TransferReport' + d.getFullYear() + smonth + day + '_' + hour + minute + seconds;
                        }
                    },
                    {
                        extend: 'print',
                        title: function () {
                            var d = new Date();
                            var day = d.getDate();
                            var smonth = ((d.getMonth() + 1));
                            var hour = d.getHours();
                            var minute = d.getMinutes();
                            var seconds = d.getSeconds();
                            if (smonth   < 10) {smonth   = "0"+smonth;}
                            if (hour   < 10) {hour   = "0"+hour;}
                            if (minute < 10) {minute = "0"+minute;}
                            if (seconds < 10) {seconds = "0"+seconds;}
                            return 'TransferReport' + d.getFullYear() + smonth + day + '_' + hour + minute + seconds;
                        }
                    },
                    {
                        extend: 'excel',
                        title: function () {
                            var d = new Date();
                            var day = d.getDate();
                            var smonth = ((d.getMonth() + 1));
                            var hour = d.getHours();
                            var minute = d.getMinutes();
                            var seconds = d.getSeconds();
                            if (smonth   < 10) {smonth   = "0"+smonth;}
                            if (hour   < 10) {hour   = "0"+hour;}
                            if (minute < 10) {minute = "0"+minute;}
                            if (seconds < 10) {seconds = "0"+seconds;}
                            return 'TransferReport' + d.getFullYear() + smonth + day + '_' + hour + minute + seconds;
                        }
                    },
                    {
                        extend: 'pdfHtml5',
                        orientation: 'landscape',
                        pageSize: 'LEGAL',
                        title: function () {
                            var d = new Date();
                            var day = d.getDate();
                            var smonth = ((d.getMonth() + 1));
                            var hour = d.getHours();
                            var minute = d.getMinutes();
                            var seconds = d.getSeconds();
                            if (smonth   < 10) {smonth   = "0"+smonth;}
                            if (hour   < 10) {hour   = "0"+hour;}
                            if (minute < 10) {minute = "0"+minute;}
                            if (seconds < 10) {seconds = "0"+seconds;}
                             return 'TransferReport' + d.getFullYear() + smonth + day + '_' + hour + minute + seconds;
                        }
                    }
            ],
                searching: true,
                lengthMenu: [[50, 100, -1], [50, 100, "All"]]
            });


            if (isSave == 't') {
                new PNotify({
                    title: 'Success',
                    text: 'Data have been updated',
                    type: 'success',
                    styling: 'bootstrap3',
                    delay: 2000,
                    nonblock: {
                        nonblock: true
                    },
                    buttons: {
                        show_on_nonblock: true
                    }
                });
            }
        });



    var deleteRow = function (id, name) {
    if (confirm("Do you want to delete " + name + "?")) {
    window.location.href = '@Url.Action("MarkupDelete")' + '/' + id;
    }
            }

    $("#txtPickupDate").datepicker({
                startDate: $("#StartPickupDate").val(),
                format: 'dd/mm/yyyy',
        autoclose: true,
                language: 'en'
    });

     $('input[name="bookingdate"]').daterangepicker({
            autoUpdateInput: false,
            locale: {
                cancelLabel: 'Clear'
            }
        });

        $('input[name="bookingdate"]').on('apply.daterangepicker', function (ev, picker) {
            $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY'));
        });

        $('input[name="bookingdate"]').on('cancel.daterangepicker', function (ev, picker) {
            $(this).val('');
        });



        $('input[name="paybefore"]').daterangepicker({
            autoUpdateInput: false,
            locale: {
                cancelLabel: 'Clear'
            }
        });

        $('input[name="paybefore"]').on('apply.daterangepicker', function (ev, picker) {
            $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY'));
        });

        $('input[name="paybefore"]').on('cancel.daterangepicker', function (ev, picker) {
            $(this).val('');


        });
    </script>
}




<style>
    .dotGreen {
        height: 15px;
        width: 15px;
        background-color: #00FF00;
        border-radius: 50%;
        display: inline-block;
    }

    .dotRed {
        height: 15px;
        width: 15px;
        background-color: #FF0000;
        border-radius: 50%;
        display: inline-block;
    }
</style>